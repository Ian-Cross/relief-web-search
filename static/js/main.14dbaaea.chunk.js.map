{"version":3,"sources":["components/reliefWebSearch.js","App.js","reportWebVitals.js","index.js"],"names":["ReliefWebSearch","useState","snippits","setSnippits","articles","setArticles","submitSearch","a","data","limit","profile","preset","slim","query","value","operator","fetch","baseURL","method","cache","body","JSON","stringify","response","json","article","includes","push","id","score","useEffect","new_snippits","new_snippit","split","content","line","replace","active","toLowerCase","parse","fetchArticleContent","onClick","map","item","index","style","border","target","rel","href","number","jndex","require","default","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.14dbaaea.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nfunction ReliefWebSearch() {\n\tconst [snippits, setSnippits] = useState([]);\n\tconst [articles, setArticles] = useState([]);\n\n\tconst submitSearch = async () => {\n\t\tlet baseURL = \"https://api.reliefweb.int/v1/reports\";\n\t\tlet appName = \"appname=rwint-user-0\";\n\n\t\tlet data = {\n\t\t\tlimit: 100,\n\t\t\tprofile: \"list\",\n\t\t\tpreset: \"latest\",\n\t\t\tslim: \"1\",\n\t\t\tquery: {\n\t\t\t\tvalue: \"WFP Syria Situation Report\",\n\t\t\t\toperator: \"AND\",\n\t\t\t},\n\t\t};\n\n\t\tlet response = await fetch(baseURL + \"?\" + appName, {\n\t\t\tmethod: \"POST\",\n\t\t\tcache: \"no-cache\",\n\t\t\tbody: JSON.stringify(data), // body data type must match \"Content-Type\" header\n\t\t});\n\n\t\tresponse = await response.json();\n\n\t\t// console.log(response);\n\t\tlet articles = [];\n\t\tfor (let article of response[\"data\"]) {\n\t\t\tif (article[\"fields\"][\"source\"][0][\"name\"] !== \"World Food Programme\")\n\t\t\t\tcontinue;\n\t\t\tif (\n\t\t\t\tarticle[\"fields\"][\"primary_country\"][\"name\"] !== \"Syrian Arab Republic\"\n\t\t\t)\n\t\t\t\tcontinue;\n\n\t\t\tif (!article[\"fields\"][\"title\"].includes(\"WFP\")) continue;\n\n\t\t\tarticles.push({\n\t\t\t\tid: article[\"id\"],\n\t\t\t\tscore: article[\"score\"],\n\t\t\t\t...article[\"fields\"],\n\t\t\t});\n\t\t}\n\t\tsetArticles(articles);\n\t};\n\n\tuseEffect(() => {\n\t\tasync function fetchArticleContent() {\n\t\t\tlet new_snippits = [];\n\t\t\tfor (let article of articles) {\n\t\t\t\tlet new_snippit = {};\n\t\t\t\tlet response = await fetch(\n\t\t\t\t\t\"https://api.reliefweb.int/v1/reports/\" + article[\"id\"]\n\t\t\t\t);\n\t\t\t\tresponse = await response.json();\n\t\t\t\tnew_snippit[\"link\"] = response[\"data\"][\"0\"][\"fields\"][\"url\"];\n\t\t\t\tnew_snippit[\"country\"] = article[\"country\"][0][\"name\"];\n\t\t\t\tnew_snippit[\"title\"] = article[\"title\"];\n\n\t\t\t\tlet body = response[\"data\"][\"0\"][\"fields\"][\"body-html\"].split(\"\\n\");\n\t\t\t\tlet content = [];\n\t\t\t\tfor (let line of body) {\n\t\t\t\t\tif (line === \"\") continue;\n\t\t\t\t\tcontent.push(line.replace(/<\\/?[^>]*>/g, \"\"));\n\t\t\t\t}\n\t\t\t\tlet active = false;\n\t\t\t\tnew_snippit[\"numbers\"] = [];\n\t\t\t\tfor (let line of content) {\n\t\t\t\t\tif (\n\t\t\t\t\t\tline.toLowerCase().includes(\"highlights\") ||\n\t\t\t\t\t\tline.toLowerCase().includes(\"situation update\") ||\n\t\t\t\t\t\tline.toLowerCase().includes(\"operational updates\")\n\t\t\t\t\t)\n\t\t\t\t\t\tactive = false;\n\t\t\t\t\tif (line.toLowerCase().includes(\"in numbers\")) active = true;\n\t\t\t\t\telse if (active) new_snippit[\"numbers\"].push(line);\n\t\t\t\t}\n\t\t\t\tnew_snippits.push(JSON.parse(JSON.stringify(new_snippit)));\n\t\t\t}\n\t\t\tsetSnippits(new_snippits);\n\t\t}\n\t\tfetchArticleContent();\n\t}, [articles]);\n\n\treturn (\n\t\t<div>\n\t\t\t<button onClick={submitSearch}>Fetch</button>\n\t\t\t{snippits.map((item, index) => (\n\t\t\t\t<div key={index} style={{ border: \"1px solid red\" }}>\n\t\t\t\t\t<div>Country: {item[\"country\"]}</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<a target=\"_blank\" rel=\"noreferrer\" href={item[\"link\"]}>\n\t\t\t\t\t\t\tTitle: {item[\"title\"]}:\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t{item[\"numbers\"].map((number, jndex) => (\n\t\t\t\t\t\t\t<div key={jndex + \"number\"}>{number}</div>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t))}\n\t\t</div>\n\t);\n}\n\nexport default ReliefWebSearch;\n","const { default: ReliefWebSearch } = require(\"components/reliefWebSearch\");\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<ReliefWebSearch />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}